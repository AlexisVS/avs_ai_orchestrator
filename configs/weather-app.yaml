# Configuration projet m√©t√©o - Exemple d'utilisation
# Utilise le template NextJS qui h√©rite du workflow de base

project:
  name: "weather-app-woluwe"
  type: "nextjs" 
  description: "Application m√©t√©o NextJS pour Woluwe-Saint-Pierre 1150, Belgique"
  version: "1.0.0"
  author: "Universal Orchestrator"
  output_dir: "C:/Users/alexi/weather-v2-orchestrated"
  
  # Variables sp√©cifiques au projet m√©t√©o
  variables:
    location: "Woluwe-Saint-Pierre"
    postal_code: "1150"
    country: "Belgique"
    coordinates_lat: "50.8503"
    coordinates_lon: "4.4347"
    weather_api: "OpenWeatherMap"

# Configuration GitHub
github:
  enabled: true
  auto_create: false
  token: "${GITHUB_TOKEN}"
  owner: "AlexisVS"
  repo_name: "test-weather-app-ia-orchestrator"
  private: false
  create_issues: true
  create_project: true
  
# Configuration IA (LM Studio + Qwen)
ai:
  url: "http://127.0.0.1:1234/v1/chat/completions"
  model: "qwen/qwen3-coder-30b"
  temperature: 0.3
  max_tokens: 2000
  
  # Prompt syst√®me sp√©cialis√© pour projet m√©t√©o
  system_prompt: |
    Tu es un expert NextJS/TypeScript qui d√©veloppe une application m√©t√©o avec TDD strict.
    
    CONTEXTE PROJET:
    - Application m√©t√©o pour Woluwe-Saint-Pierre 1150, Belgique
    - Coordonn√©es: 50.8503, 4.4347
    - NextJS 14 + TypeScript + Tailwind CSS
    - API OpenWeatherMap
    - Interface responsive moderne
    
    SP√âCIFICIT√âS M√âT√âO:
    - Affichage temps r√©el
    - Cache intelligent (10 minutes)
    - Gestion hors ligne basique
    - Donn√©es: temp√©rature, description, humidit√©, vent
    - Interface intuitive et accessible
    
    R√àGLES TDD:
    1. Tests d'abord (RED phase)
    2. Code minimal fonctionnel (GREEN phase)  
    3. Refactoring avec tests passants (REFACTOR phase)
    4. Couverture > 80%
    5. Zero erreur de linting/types

# Configuration TDD
tdd:
  enabled: true
  strict_mode: true  # Bloque si tests √©chouent
  coverage_threshold: 85
  
  # Issues personnalis√©es pour l'app m√©t√©o
  custom_issues:
    - title: "üå§Ô∏è Feature: API m√©t√©o Woluwe-Saint-Pierre"
      description: "Cr√©er API route pour r√©cup√©rer m√©t√©o temps r√©el"
      details: |
        ## Description
        Route API NextJS pour m√©t√©o de Woluwe-Saint-Pierre (50.8503, 4.4347)
        
        ## Crit√®res d'acceptation
        - Route `/api/weather`
        - Integration OpenWeatherMap
        - Cache 10 minutes
        - Donn√©es: temp, description, humidit√©, vent
        - Gestion erreurs robuste
        - Types TypeScript stricts
        
        ## Tests requis
        - R√©ponse API valide
        - Cache fonctionnel  
        - Gestion erreurs r√©seau
        - Validation donn√©es m√©t√©o
      labels: ["feature", "api", "weather"]
      
    - title: "üé® UI: Interface m√©t√©o responsive"
      description: "Composant d'affichage m√©t√©o moderne"
      details: |
        ## Description
        Interface utilisateur pour afficher m√©t√©o Woluwe-Saint-Pierre
        
        ## Crit√®res d'acceptation
        - Composant WeatherDisplay
        - Design responsive (mobile + desktop)
        - Affichage: "Woluwe-Saint-Pierre 1150"
        - Temp√©rature en ¬∞C pro√©minente
        - Ic√¥nes m√©t√©o appropri√©es
        - √âtats: loading, error, success
        - Bouton actualisation
        
        ## Design
        - Couleurs selon m√©t√©o
        - Animations subtiles
        - Accessibilit√© WCAG 2.1
        - Performance optimis√©e
      labels: ["feature", "ui", "weather", "responsive"]

# Configuration des tests
testing:
  enabled: true
  frameworks:
    - "jest"
    - "@testing-library/react"
    - "@testing-library/user-event"
    
  commands:
    - "npm test"
    - "npm run test:coverage"
    
  coverage_threshold: 85
  
  # Types de tests requis
  test_types:
    - "unit"      # Tests unitaires composants
    - "integration"  # Tests API routes  
    - "e2e"       # Tests bout en bout (optionnel)

# Configuration qualit√©
quality:
  enabled: true
  
  mandatory_checks:
    - name: "typescript"
      command: "npm run typecheck" 
      blocking: true
      
    - name: "eslint"
      command: "npm run lint"
      blocking: true
      
    - name: "prettier"
      command: "npm run format:check"
      blocking: false
      
    - name: "build"
      command: "npm run build"
      blocking: true
      
  # M√©triques qualit√© sp√©cifiques
  metrics:
    accessibility_score: 95  # Score Lighthouse accessibilit√©
    performance_score: 90    # Score Lighthouse performance  
    seo_score: 95           # Score Lighthouse SEO

# Configuration d√©ploiement
deploy:
  enabled: true
  platform: "vercel"
  
  # Variables d'environnement pour d√©ploiement
  environment_variables:
    - name: "WEATHER_API_KEY"
      description: "Cl√© API OpenWeatherMap"
      required: false  # Mode d√©mo disponible
      
    - name: "NEXT_PUBLIC_APP_NAME"
      value: "M√©t√©o Woluwe-Saint-Pierre"
      
    - name: "NEXT_PUBLIC_LOCATION"
      value: "Woluwe-Saint-Pierre 1150, Belgique"
  
  # Commandes de d√©ploiement
  commands:
    - "npm run build"
    - "vercel --prod"
    
  # V√©rifications post-d√©ploiement
  post_deploy_checks:
    - name: "health_check"
      url: "https://{deployment_url}/api/health"
      expected_status: 200
      
    - name: "weather_api_check"  
      url: "https://{deployment_url}/api/weather"
      expected_status: 200

# Configuration monitoring (optionnel)
monitoring:
  enabled: false  # D√©sactiv√© pour projet de d√©mo
  
  # M√©triques √† surveiller
  metrics:
    - "response_time"
    - "error_rate" 
    - "api_calls_count"
    - "user_sessions"

# Configuration documentation
documentation:
  auto_generate: true
  
  files:
    - "README.md"
    - "API.md"
    - "DEPLOYMENT.md"
    - "CONTRIBUTING.md"
  
  # Sections automatiques dans README
  readme_sections:
    - "description"
    - "features"
    - "installation"
    - "usage"
    - "api_endpoints"
    - "testing"
    - "deployment" 
    - "contributing"